version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile.api
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-smscrm}
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3000
      NODE_ENV: production
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3001}
      COOKIE_SECRET: ${COOKIE_SECRET:-this-is-a-very-long-cookie-secret-for-production-use-123456789012}
      SESSION_SECRET: ${SESSION_SECRET:-this-is-a-very-long-session-secret-for-production-use-123456789012}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID:-test}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN:-test}
      TWILIO_FROM_NUMBER: ${TWILIO_FROM_NUMBER:-+15005550006}
      SHORT_DOMAIN: ${SHORT_DOMAIN:-localhost:3003}
      SHORT_LINK_SECRET: ${SHORT_LINK_SECRET:-default-short-link-secret}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    deploy:
      replicas: 1

  worker:
    build:
      context: ..
      dockerfile: infra/Dockerfile.worker
    ports:
      - "3002:3002"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-smscrm}
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NODE_ENV: production
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      WORKER_PORT: 3002
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID:-test}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN:-test}
      TWILIO_FROM_NUMBER: ${TWILIO_FROM_NUMBER:-+15005550006}
      SHORT_DOMAIN: ${SHORT_DOMAIN:-localhost:3003}
      SHORT_LINK_SECRET: ${SHORT_LINK_SECRET:-default-short-link-secret}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  shortener:
    build:
      context: ..
      dockerfile: worker/shortener/Dockerfile.shortener
    ports:
      - "3003:3003"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      NODE_ENV: production
      API_BASE_URL: ${API_BASE_URL}
      SHORTENER_PORT: 3003
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  web:
    build:
      context: ..
      dockerfile: apps/web/Dockerfile
    ports:
      - "3001:80"
    environment:
      NEXT_PUBLIC_API_URL: ${API_BASE_URL}
      NODE_ENV: production
    depends_on:
      - api
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - api
      - web
      - shortener
    restart: always

volumes:
  postgres_data:
  redis_data:
