name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: smscrm_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm run lint

      - name: Build packages
        run: pnpm run build

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/smscrm_test
          REDIS_URL: redis://localhost:6379
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          NODE_ENV: test
        run: pnpm run test

      - name: Run database migration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/smscrm_test
          NODE_ENV: test
        run: |
          cd packages/lib
          pnpm run migrate
